// Author: Bernardo Ortiz
// bernardo.ortiz.vanderdys@gmail.com
// cell: 949/400-5158
// addr: 67 Rockwood	Irvine, CA 92614

IO_port TLB_code_ctrl 0x10002000
IO_port TLB_data_ctrl 0x10002010
IO_port TLB_code_L1_addr 0x10002020 // 32b IO location reads to io_port+4
IO_port TLB_data_L1_addr 0x10002040 // 32b IO location reads to io_port+4
IO_port TLB_code_L2_addr 0x10002060 // 32b IO location reads to io_port+4
IO_port TLB_data_L2_addr 0x10002080 // 32b IO location reads to io_port+4

IO_port L0C_ctrl 0x100020b0
IO_port L0D_ctrl 0x100020c0
IO_port L2_ctrl	0x100020d0

void reset_handler(){	
	sp = (mhartid+1)<<21;// needs to be on 2MB boundaries to be on seperate bank
	mideleg = 0x00000aaa;
	medeleg = 0x0000bb00;
	mstatus |= 0xa;// enable interrupts M (8) and S (2)
	mtvec = 0x00200000;//32b reg
	stvec = 0x80200000;// OS space direct mapped, not swappable
//	msp = mtvec +((mhartid+1)<<21);// avoids recalculating on every page miss - 32b reg
//	ssp = stvec +((mhartid+1)<<21);// avoids recalculating on every page miss - 32b reg
	satp = (0x900000000008C800 | (mhartid<<44));
	TLB_code_ctrl[0] = 1; // enable code TLB
	TLB_data_ctrl[0] = 1; // enable data TLB
	L0C_ctrl[0] = 1;
	L0D_ctrl[0] = 1;
	L2_ctrl[0] = 1;
	OS_entry(); // OS cacheable, no-swappable 
	wfi;
}
